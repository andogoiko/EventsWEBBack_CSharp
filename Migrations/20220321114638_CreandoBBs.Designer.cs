// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoFinal.Data;

namespace proyectoFinal.Migrations
{
    [DbContext(typeof(projectContext))]
    [Migration("20220321114638_CreandoBBs")]
    partial class CreandoBBs
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Property<int>("categoria_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoria_id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.Property<int>("comentario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categoria_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comentario_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evento_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evento_id1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("fecha_comentario")
                        .HasColumnType("int");

                    b.Property<string>("usuario_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario_id1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("comentario_id");

                    b.HasIndex("evento_id1");

                    b.HasIndex("usuario_id1");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Property<string>("evento_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("categoria_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("categoria_id1")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_fin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_inic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hora_fin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hora_inic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localizacion_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("localizacion_id1")
                        .HasColumnType("int");

                    b.Property<string>("precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("evento_id");

                    b.HasIndex("categoria_id1");

                    b.HasIndex("localizacion_id1");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.Property<int>("inscripcion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("evento_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evento_id1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("usuario_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario_id1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("valoracion")
                        .HasColumnType("int");

                    b.HasKey("inscripcion_id");

                    b.HasIndex("evento_id1");

                    b.HasIndex("usuario_id1");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Property<int>("localizacion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("latitud")
                        .HasColumnType("float");

                    b.Property<string>("localizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.HasKey("localizacion_id");

                    b.ToTable("Localizaciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Property<string>("usuario_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuario_id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "evento")
                        .WithMany("comentarios")
                        .HasForeignKey("evento_id1");

                    b.HasOne("proyectoFinal.Models.Usuario", "usuario")
                        .WithMany("comentarios")
                        .HasForeignKey("usuario_id1");

                    b.Navigation("evento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.HasOne("proyectoFinal.Models.Categoria", "categoria")
                        .WithMany("eventos")
                        .HasForeignKey("categoria_id1");

                    b.HasOne("proyectoFinal.Models.Localizacion", "localizacion")
                        .WithMany("eventos")
                        .HasForeignKey("localizacion_id1");

                    b.Navigation("categoria");

                    b.Navigation("localizacion");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "evento")
                        .WithMany("inscripciones")
                        .HasForeignKey("evento_id1");

                    b.HasOne("proyectoFinal.Models.Usuario", "usuario")
                        .WithMany("inscripciones")
                        .HasForeignKey("usuario_id1");

                    b.Navigation("evento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Navigation("eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Navigation("comentarios");

                    b.Navigation("inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Navigation("eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Navigation("comentarios");

                    b.Navigation("inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
