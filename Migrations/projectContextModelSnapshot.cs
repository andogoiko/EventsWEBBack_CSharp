// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoFinal.Data;

namespace proyectoFinal.Migrations
{
    [DbContext(typeof(projectContext))]
    partial class projectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Property<int>("categoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.Property<int>("comentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("comentario_text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("eventoId")
                        .HasColumnType("int");

                    b.Property<string>("fecha_comentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("comentarioId");

                    b.HasIndex("eventoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Property<int>("eventoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("aforo_max")
                        .HasColumnType("int");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("evento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_fin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fecha_inic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hora_fin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hora_inic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("localizacionId")
                        .HasColumnType("int");

                    b.Property<int>("popularidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventoId");

                    b.HasIndex("categoriaId");

                    b.HasIndex("localizacionId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.Property<int>("inscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("eventoId")
                        .HasColumnType("int");

                    b.Property<int>("usuarioId")
                        .HasColumnType("int");

                    b.Property<int>("valoracion")
                        .HasColumnType("int");

                    b.HasKey("inscripcionId");

                    b.HasIndex("eventoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Property<int>("localizacionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("latitud")
                        .HasColumnType("float");

                    b.Property<string>("localizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.HasKey("localizacionId");

                    b.ToTable("Localizaciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Property<int>("usuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("administrator")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioId");

                    b.HasIndex("usuarioId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "evento")
                        .WithMany("comentarios")
                        .HasForeignKey("eventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Usuario", "usuario")
                        .WithMany("comentarios")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.HasOne("proyectoFinal.Models.Categoria", "categoria")
                        .WithMany("eventos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Localizacion", "localizacion")
                        .WithMany("eventos")
                        .HasForeignKey("localizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("localizacion");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "evento")
                        .WithMany("inscripciones")
                        .HasForeignKey("eventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Usuario", "usuario")
                        .WithMany("inscripciones")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("evento");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Navigation("eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Navigation("comentarios");

                    b.Navigation("inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Navigation("eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Navigation("comentarios");

                    b.Navigation("inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
