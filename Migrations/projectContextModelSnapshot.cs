// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using proyectoFinal.Data;

namespace proyectoFinal.Migrations
{
    [DbContext(typeof(projectContext))]
    partial class projectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Property<string>("categoriaId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcionCategoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("categoriaId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.Property<int>("comentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("categoriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comentarioText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eventoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fechaComentario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("comentarioId");

                    b.HasIndex("eventoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Comentarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Property<string>("eventoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("categoriaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fechaInic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaFin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("horaInic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("localizacionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("precio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("eventoId");

                    b.HasIndex("categoriaId");

                    b.HasIndex("localizacionId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.Property<int>("InscripcionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("eventoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("usuarioId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("valoracion")
                        .HasColumnType("int");

                    b.HasKey("InscripcionId");

                    b.HasIndex("eventoId");

                    b.HasIndex("usuarioId");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Property<string>("localizacionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("latitud")
                        .HasColumnType("float");

                    b.Property<double>("longitud")
                        .HasColumnType("float");

                    b.HasKey("localizacionId");

                    b.ToTable("Localizaciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Property<string>("usuarioId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("proyectoFinal.Models.Comentario", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "Evento")
                        .WithMany("Comentarios")
                        .HasForeignKey("eventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.HasOne("proyectoFinal.Models.Categoria", "Categoria")
                        .WithMany("Eventos")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Localizacion", "Localizacion")
                        .WithMany("Eventos")
                        .HasForeignKey("localizacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Localizacion");
                });

            modelBuilder.Entity("proyectoFinal.Models.Inscripcion", b =>
                {
                    b.HasOne("proyectoFinal.Models.Evento", "Evento")
                        .WithMany("Inscripciones")
                        .HasForeignKey("eventoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("proyectoFinal.Models.Usuario", "Usuario")
                        .WithMany("Inscripciones")
                        .HasForeignKey("usuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("proyectoFinal.Models.Categoria", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Evento", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("proyectoFinal.Models.Localizacion", b =>
                {
                    b.Navigation("Eventos");
                });

            modelBuilder.Entity("proyectoFinal.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Inscripciones");
                });
#pragma warning restore 612, 618
        }
    }
}
